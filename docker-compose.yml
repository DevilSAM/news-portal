version: '1.1'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: news-portal-app
    container_name: news-portal-app
    restart: unless-stopped
    volumes:
      - ./:/var/www
      - ./.env:/var/www/.env
    environment:
      - APP_ENV=local
    networks:
      - my-app-network

  nginx:
    image: nginx:alpine
    container_name: news-portal-nginx
    ports:
      - "8002:80"
    volumes:
      - ./:/var/www
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - app
    networks:
      - my-app-network

  node:
    platform: linux/amd64
    build:
      context: .
      dockerfile: Dockerfile.node
    image: news-portal-node
    container_name: news-portal-node
    ports:
      - "3000:3000"
    restart: unless-stopped
    volumes:
      - ./:/var/www
      - /var/www/node_modules
    networks:
      - my-app-network

  db:
    platform: linux/x86_64
    image: mysql:8.0
    container_name: news-portal-mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - my-app-network
    ports:
      - "3307:3306"

  rabbitmq:
    image: rabbitmq:3.13-management
    container_name: news-portal-rabbitmq
    hostname: ${RABBITMQ_HOST}
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USERNAME}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    ports:
      - "15672:15672"
    networks:
      - my-app-network

networks:
  my-app-network:
    driver: bridge

volumes:
  composer-cache:
  dbdata:
    driver: local
